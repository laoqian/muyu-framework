<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="muyu.system.dao.RoleDao">

    <sql id="RoleColumns">
        a.id AS "id",
        a.name AS "name",
        a.ename AS "ename",
        a.company_id AS "company.id",
        c.name AS "company.name" ,
        a.office_id AS "office.id" ,
        d.name AS "office.name" ,
        a.type AS "type",
        a.create_by AS "createBy.id" ,
        a.create_date AS "createDate" ,
        a.update_by AS "updateBy.id" ,
        a.update_date AS "updateDate" ,
        a.remarks AS "remarks" ,
        a.del_flag AS "delFlag"
    </sql>

    <sql id="RoleJoins">
        LEFT JOIN sys_office c ON c.id = a.company_id
        LEFT JOIN sys_office d ON d.id = a.office_id
    </sql>

    <select id="get" resultType="Role">
        SELECT
        <include refid="RoleColumns"/>
        FROM sys_role a
        <include refid="RoleJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="query" resultType="Role">
        SELECT
        <include refid="RoleColumns"/>
        FROM sys_role a
        <include refid="RoleJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="Role">
        SELECT
        <include refid="RoleColumns"/>
        FROM sys_role a
        <include refid="RoleJoins"/>
        <where>
            <if test="sqlMap.userId!=null and sqlMap.userId!=''">
                a.id IN (SELECT s.role_id FROM sys_user_role s WHERE s.user_id =#{sqlMap.userId})
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.id DESC
            </otherwise>
        </choose>
    </select>

    <select id="findRoleMenuList" resultType="RoleMenu">
        SELECT
            a.id AS "id",
            a.role_id AS "roleId",
            a.menu_id AS "menuId"
        FROM sys_role_menu a
        WHERE a.role_id =#{roleId}
    </select>

    <insert id="insertRoleMenu">
        INSERT INTO sys_role_menu(
        id,
        role_id,
        menu_id
        ) VALUES (
        #{id},
        #{roleId},
        #{menuId}
        )
    </insert>

    <insert id="insert">
        INSERT INTO sys_role(
            id,
            name,
            ename,
            office_id,
            company_id,
            type,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag
        ) VALUES (
            #{id},
            #{name},
            #{ename},
            #{office.id},
            #{company.id},
            #{type},
            #{createBy.id},
            #{createDate},
            #{updateBy.id},
            #{updateDate},
            #{remarks},
            #{delFlag}
        )
    </insert>

    <update id="update">
        UPDATE sys_role SET
            id=#{id},
            name=#{name},
            ename=#{ename},
            company_id=#{company.id},
            office_id=#{office.id},
            type = #{type},
            update_by=#{updateBy.id},
            update_date=#{updateDate},
            remarks=#{remarks},
            del_flag=#{delFlag}
        WHERE id = #{id}
    </update>

    <update id="delete">
        DELETE FROM sys_role
        WHERE id =  #{id}
    </update>
    <update id="logicDelete">
        UPDATE sys_role SET del_flag = 1
        WHERE id = #{id}
    </update>
</mapper>